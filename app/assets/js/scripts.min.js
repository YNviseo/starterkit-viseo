/*!
 * ViseoFrontEndStarterKit
 * A FrontEnd Starterkit with Gulp / SAss and jQuery
 * 
 * @author Yassine Nassib
 * @version 1.0.0
 * Copyright 2018.  licensed.
 */
!function(e,s,t,a){"use strict";e(function(){var s={vars:{mainSlider:e(".full-width-slider"),carousel:e(".carousel"),navigation:e(".navbar-component"),masonryLayout:e(".masonry-container"),masonryImages:e(".masonry-images"),selectBoxMulitple:e(".select-box-multiple"),selectBoxSingle:e(".select-box"),accordionHorz:e("#accordion-horizontal"),chart:e("#highchart")},init:function(){var e=this.vars.accordionHorz;this.fullWidthSlider(),this.carousel(),this.masonryLayout(),this.masonryImages(),this.lightbox(),this.customSelect(),this.accordion(e),this.chart()},fullWidthSlider:function(){this.vars.mainSlider.slick()},carousel:function(){this.vars.carousel.slick({slidesToShow:3,slidesToScroll:1,dots:!0,responsive:[{breakpoint:1024,settings:{slidesToShow:2,slidesToScroll:1,infinite:!0,dots:!0}},{breakpoint:600,settings:{slidesToShow:1,slidesToScroll:1}},{breakpoint:480,settings:{slidesToShow:1,slidesToScroll:1}}]})},masonryLayout:function(){s.vars.masonryLayout.find(".grid").masonry({itemSelector:".grid-item",columnWidth:".grid-sizer",percentPosition:!0})},masonryImages:function(){var e=s.vars.masonryImages.find(".grid").masonry({itemSelector:".grid-item",percentPosition:!0,columnWidth:".grid-sizer"});e.imagesLoaded().progress(function(){e.masonry()})},lightbox:function(){lightbox.option({resizeDuration:200,wrapAround:!0})},customSelect:function(){s.vars.selectBoxMulitple.select2({placeholder:"Select a state"}),s.vars.selectBoxSingle.select2({selectOnClose:!0,placeholder:"Select a state"})},accordion:function(s){var t=s,a=t.find(".accordion-question");t.find(".accordion-item").eq(0).addClass("active"),a.on("click",function(){var s=e(this).parents(".accordion-item").hasClass("active");t.find(".accordion-item").each(function(){e(this).removeClass("active")}),s||e(this).parents(".accordion-item").addClass("active")})},contactFormValidation:function(){e(t).ready(function(){e("#contact_form").bootstrapValidator({feedbackIcons:{valid:"glyphicon glyphicon-ok",invalid:"glyphicon glyphicon-remove",validating:"glyphicon glyphicon-refresh"},fields:{first_name:{validators:{stringLength:{min:2},notEmpty:{message:"Please supply your first name"}}},last_name:{validators:{stringLength:{min:2},notEmpty:{message:"Please supply your last name"}}},email:{validators:{notEmpty:{message:"Please supply your email address"},emailAddress:{message:"Please supply a valid email address"}}},phone:{validators:{notEmpty:{message:"Please supply your phone number"},phone:{country:"US",message:"Please supply a vaild phone number with area code"}}},address:{validators:{stringLength:{min:8},notEmpty:{message:"Please supply your street address"}}},city:{validators:{stringLength:{min:4},notEmpty:{message:"Please supply your city"}}},state:{validators:{notEmpty:{message:"Please select your state"}}},zip:{validators:{notEmpty:{message:"Please supply your zip code"},zipCode:{country:"US",message:"Please supply a vaild zip code"}}},comment:{validators:{stringLength:{min:10,max:200,message:"Please enter at least 10 characters and no more than 200"},notEmpty:{message:"Please supply a description of your project"}}}}}).on("success.form.bv",function(s){e("#success_message").slideDown({opacity:"show"},"slow"),e("#contact_form").data("bootstrapValidator").resetForm(),s.preventDefault()})})},chart:function(){!function(){new Highcharts.Chart({chart:{renderTo:"container",animation:!0},title:{text:""},xAxis:{categories:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},plotOptions:{series:{point:{events:{drag:function(s){e("#drag").html("Dragging <b>"+this.series.name+"</b>, <b>"+this.category+"</b> to <b>"+Highcharts.numberFormat(s.y,2)+"</b>")},drop:function(){e("#drop").html("In <b>"+this.series.name+"</b>, <b>"+this.category+"</b> was set to <b>"+Highcharts.numberFormat(this.y,2)+"</b>")}}},stickyTracking:!1},column:{stacking:"normal"},line:{cursor:"ns-resize"}},tooltip:{yDecimals:2},series:[{data:[0,71.5,106.4,129.2,144,176,135.6,148.5,216.4,194.1,95.6,54.4],draggableY:!1,dragMinY:0,type:"column",minPointLength:2},{data:[0,71.5,106.4,129.2,144,176,135.6,148.5,216.4,194.1,95.6,54.4].reverse(),draggableY:!1,dragMinY:0,type:"column",minPointLength:2},{data:[0,71.5,106.4,129.2,144,176,135.6,148.5,216.4,194.1,95.6,54.4],draggableY:!0}]})}()}};s.init()})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
